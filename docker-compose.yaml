version: "3.9"

services:
  db: 
    container_name: my_table_postgres
    image: postgres
    ports:
      - 5432/tcp
    volumes:
      - my_table_postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=my_table_postgres
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=Ieyh5&RIR48!&8fc

  redis: 
    container_name: redis
    image: redis
    ports:
      - 6739:6739/tcp
    environment:
      - REDIS_HOST=redis-oauth-user-service
    volumes:
      - redis_data:/var/lib/redis/data/

  my_table:
    container_name: my_table
    build: .
    command: ["python", "-m", "gunicorn", "--bind", "0.0.0.0:5000", "-c", "gunicorn.conf.py", "mytable.wsgi"]
    volumes:
      - .:/api
      - /etc/letsencrypt/live/api.my-table.it/:/certs
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis

  celery:
    image: celery
    container_name: celery
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: ['python', '-m', 'celery', '-A', 'mytable' ,'worker', '-l', 'INFO']
    volumes:
      - .:/api
    depends_on:
      - redis
      - my_table
    links:
      - redis

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    environment:
      - DOMAIN
    depends_on:
      - app
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
      - /var/log/nginx:/var/log/nginx

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email mpossamaim@gmail.com --agree-tos --no-eff-email
             -d api.my-table.it
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot


volumes:
  my_table_postgres_db:
  redis_data:
  