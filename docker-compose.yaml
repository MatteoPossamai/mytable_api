version: "3.9"

services:
  db: 
    container_name: my_table_postgres
    image: postgres
    ports:
      - 5432/tcp
    volumes:
      - my_table_postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=my_table_postgres
      - POSTGRES_USER=dev
      - POSTGRES_PASSWORD=Ieyh5&RIR48!&8fc

  redis: 
    container_name: redis
    image: redis
    ports:
      - 6739:6739/tcp
    environment:
      - REDIS_HOST=redis-oauth-user-service
    volumes:
      - redis_data:/var/lib/redis/data/

  my_table:
    container_name: my_table
    build: .
    command: ["python", "-m", "gunicorn", "--bind", "0.0.0.0:5000", "-c", "gunicorn.conf.py", "mytable.wsgi"]
    volumes:
      - .:/api
      - /etc/letsencrypt/live/api.my-table.it/:/certs
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis

  celery:
    image: celery
    container_name: celery
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: ['python', '-m', 'celery', '-A', 'mytable' ,'worker', '-l', 'INFO']
    volumes:
      - .:/api
    depends_on:
      - redis
      - my_table
    links:
      - redis

  nginx:
      build: ./nginx
      ports:
         - 80:80
         - 443:443
      depends_on:
         - my_table
      command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
      image: certbot/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  my_table_postgres_db:
  redis_data: